# encrypted boy broken-nadeem 
 # github : githun.com/broken-nadeem
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'=='))